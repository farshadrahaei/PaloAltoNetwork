{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "metadata": {
                "description": "region of resources"
            }
        },
        "newStorageAccount": {
            "type": "string",
            "metadata": {
                "description": "Globally unique lowercase name of your storage account"
            }
        },
        "storageAccountType": {
            "type": "string",
            "metadata": {
                "description": "The type of the Storage Account created"
            },
            "defaultValue": "Standard_LRS"
        },
        "storageAccountNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "Description": "Indicates whether the Storage Account is new or existing"
            }
        },
        "existingStorageAccountRG": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Storage Resource Group of the Existing VM."
            }
        },
        "dnsNameForPublicIP": {
            "type": "string",
            "metadata": {
                "description": "Globally unique DNS name to access management interface of VM-Series firewall"
            }
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Name of VM-Series VM in the Azure portal"
            }
        },
        "adminUserName": {
            "type": "string",
            "metadata": {
                "description": "Username for VM-Series administrator"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "Pal0Alt0!29",
            "metadata": {
                "description": "Password for VM-Series administrator"
            }
        },
        "authenticationType": {
            "type": "string",
            "metadata": {
                "descritpion": "Type of authentication "
            },
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "defaultValue": "password"
        },
		"sshKey": {
            "type": "string",
            "metadata": {
                "description": "SSH rsa public key file as a string."
            }
        },
        "vmSize": {
            "type": "string",
            "allowedValues": [
                "Standard_DS3_v2",
				"Standard_DS4_v2"
            ],
            "metadata": {
                "description": "Azure VM size for VM-Series"
            }
        },
        "srcIPInboundNSG": {
            "type": "string",
            "metadata": {
                "description": "Your source public IP address. Added to the inbound DefaultNSG on eth0 (MGMT)"
            }
        },
		"baseUrl": {
            "type": "string",
            "metadata": {
                "artifactsBaseUrl": ""
            },
            "defaultValue": "https://raw.githubusercontent.com/farshadrahaei/PaloAltoNetworks/multi-public-interface-v2"
        },
        "vNetNewOrExisting": {
            "type": "string",
            "defaultValue": "existing",
            "allowedValues": [
            "new",
            "existing"
             ],
            "metadata": {
            "description": "Specify whether to create a new or existing virtual network for the VM."
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Name of the virtual network that the consumer wants to use"
            },
            "defaultValue": "panVnet"
        },
        "virtualNetworkAddressPrefix": {
            "type": "string",
            "defaultValue": "192.168.0.0/16",
            "metadata": {
                "description": "Virtual network address CIDR"
            }
        },

        "subnet0Name": {
            "type": "string",
            "defaultValue": "Management",
            "metadata": {
                "description": "Subnet for the Management"
            }
        },
        "subnet1Name": {
            "type": "string",
            "defaultValue": "Trust",
            "metadata": {
                "description": "Subnet for the Trust"
            }
        },
        "subnet2Name": {
            "type": "string",
            "defaultValue": "Untrust1",
            "metadata": {
                "description": "Subnet for the Untrust1"
            }
        },
		"subnet3Name": {
            "type": "string",
            "defaultValue": "Untrust2",
            "metadata": {
                "description": "Subnet for the Untrust2"
            }
        },
		"subnet4Name": {
            "type": "string",
            "defaultValue": "Untrust3",
            "metadata": {
                "description": "Subnet for the Untrust3"
            }
        },
		"subnet5Name": {
            "type": "string",
            "defaultValue": "Untrust4",
            "metadata": {
                "description": "Subnet for the Untrust4"
            }
        },		
		"subnet6Name": {
            "type": "string",
            "defaultValue": "Untrust5",
            "metadata": {
                "description": "Subnet for the Untrust5"
            }
        },
		"subnet7Name": {
            "type": "string",
            "defaultValue": "Untrust6",
            "metadata": {
                "description": "Subnet for the Untrust6"
            }
        },
        "subnet0Prefix": {
            "type": "string",
            "defaultValue": "192.168.0.0/24",
            "metadata": {
                "description": "Management subnet CIDR"
            }
        },
        "subnet1Prefix": {
            "type": "string",
            "defaultValue": "192.168.1.0/24",
            "metadata": {
                "description": "Trust subnet CIDR"
            }
        },
        "subnet2Prefix": {
            "type": "string",
            "defaultValue": "192.168.2.0/24",
            "metadata": {
                "description": "Untrust1 subnet CIDR"
            }
        },
		"subnet3Prefix": {
            "type": "string",
            "defaultValue": "192.168.3.0/24",
            "metadata": {
                "description": "Untrust2 subnet CIDR"
            }
        },
	    "subnet4Prefix": {
            "type": "string",
            "defaultValue": "192.168.4.0/24",
            "metadata": {
                "description": "Untrust3 subnet CIDR"
            }
        },
		"subnet5Prefix": {
            "type": "string",
            "defaultValue": "192.168.5.0/24",
            "metadata": {
                "description": "Untrust4 subnet CIDR"
            }
        },
		"subnet6Prefix": {
            "type": "string",
            "defaultValue": "192.168.6.0/24",
            "metadata": {
                "description": "Untrust5 subnet CIDR"
            }
        },
		"subnet7Prefix": {
            "type": "string",
            "defaultValue": "192.168.7.0/24",
            "metadata": {
                "description": "Untrust6 subnet CIDR"
            }
        },
        "subnet0StartAddress": {
            "type": "string",
            "defaultValue": "192.168.0.4",
            "metadata": {
                "description": "Management subnet start address"
            }
        },
        "subnet1StartAddress": {
            "type": "string",
            "defaultValue": "192.168.1.4",
            "metadata": {
                "description": "Trust subnet start address"
            }
        },
        "subnet2StartAddress": {
            "type": "string",
            "defaultValue": "192.168.2.4",
            "metadata": {
                "description": "Untrust1 subnet start address"
            }
        },
		"subnet3StartAddress": {
            "type": "string",
            "defaultValue": "192.168.3.4",
            "metadata": {
                "description": "Untrust2 subnet start address"
            }
        },
		"subnet4StartAddress": {
            "type": "string",
            "defaultValue": "192.168.4.4",
            "metadata": {
                "description": "Untrust3 subnet start address"
            }
        },
		"subnet5StartAddress": {
            "type": "string",
            "defaultValue": "192.168.5.4",
            "metadata": {
                "description": "Untrust4 subnet start address"
            }
        },
		"subnet6StartAddress": {
            "type": "string",
            "defaultValue": "192.168.6.4",
            "metadata": {
                "description": "Untrust5 subnet start address"
            }
        },
		"subnet7StartAddress": {
            "type": "string",
            "defaultValue": "192.168.7.4",
            "metadata": {
                "description": "Untrust6 subnet start address"
            }
        }
    },
    "variables": {
        "apiVersion": "2015-06-15",
        "imagePublisher": "paloaltonetworks",
        "imageSku": "byol",
        "imageOffer": "vmseries1",
        "fwpublicIPName": "[concat(parameters('vmName'), '-ManagementPublicIP')]",
        "nicName": "[concat(parameters('vmName'), '-eth')]",
		"FWPrivateIPAddressManagement": "[parameters('subnet0StartAddress')]",
        "FWPrivateIPAddressTrust": "[parameters('subnet1StartAddress')]",
        "FWPrivateIPAddressUntrust1": "[parameters('subnet2StartAddress')]",
		"FWPrivateIPAddressUntrust2": "[parameters('subnet3StartAddress')]",
	    "FWPrivateIPAddressUntrust3": "[parameters('subnet4StartAddress')]",
		"FWPrivateIPAddressUntrust4": "[parameters('subnet5StartAddress')]",
		"FWPrivateIPAddressUntrust5": "[parameters('subnet6StartAddress')]",
		"FWPrivateIPAddressUntrust6": "[parameters('subnet7StartAddress')]",
        "publicIPAddressType": "Dynamic",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "nsgname-mgmt": "[concat(parameters('vmName'), '-DefaultNSG')]",
        "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet0Name'))]",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]",
        "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet2Name'))]",
		"subnet3Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet3Name'))]",
		"subnet4Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet4Name'))]",
		"subnet5Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet5Name'))]",
		"subnet6Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet6Name'))]",
		"subnet7Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet7Name'))]",
		
        "storageAccountSetupURL": "[concat(parameters('baseUrl'),'/storageAccount-',parameters('storageAccountNewOrExisting'),'.json')]",
        "vmTemplateUrl": "[concat(parameters('baseUrl'), '/virtual-machine-', parameters('authenticationType'),'.json')]"
    },
    "resources": [
        {
            "name": "storageAcountSetup1",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('storageAccountSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "storageAccountType": {
                        "value": "[parameters('storageAccountType')]"
                    },
                    "newStorageAccount": {
                        "value": "[parameters('newStorageAccount')]"
                    },
                    "storageAccountExistingRG": {
                        "value": "[parameters('existingStorageAccountRG')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('fwpublicIPName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(parameters('vmName'), '-DefaultNSG')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-Outside-From-IP",
                        "properties": {
                            "description": "Rule",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('srcIPInboundNSG')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Allow-Intra",
                        "properties": {
                            "description": "Allow intra network traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[concat(parameters('virtualNetworkAddressPrefix'))]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Default-Deny",
                        "properties": {
                            "description": "Default-Deny if we don't match Allow rule",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
			"condition": "[equals(parameters('vNetNewOrExisting'), 'new')]",
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgname-mgmt'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworkAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnet0Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet0Prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname-mgmt'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet1Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet2Prefix')]"
                        }
                    },
					{
                        "name": "[parameters('subnet3Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet3Prefix')]"
                        }
                    },
					{
                        "name": "[parameters('subnet4Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet4Prefix')]"
                        }
                    },
					{
                        "name": "[parameters('subnet5Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet5Prefix')]"
                        }
                    },
					{
                        "name": "[parameters('subnet6Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet6Prefix')]"
                        }
                    },
					{
                        "name": "[parameters('subnet7Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet7Prefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '0')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('fwpublicIPName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "tags": {
                "displayName": "[concat('NetworkInterfaces', '0')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig', '0')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
							"privateIPAddress": "[variables('FWPrivateIPAddressManagement')]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('fwpublicIPName'))]"
                            },
                            "subnet": {
                                "id": "[variables(concat('subnet','0','Ref'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '1')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "tags": {
                "displayName": "[concat('NetworkInterfaces', '1')]"
            },
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig', '1')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('FWPrivateIPAddressTrust')]",
                            "subnet": {
                                "id": "[variables(concat('subnet','1','Ref'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '2')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "tags": {
                "displayName": "[concat('NetworkInterfaces', '2')]"
            },
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig', '2')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('FWPrivateIPAddressUntrust1')]",
                            "subnet": {
                                "id": "[variables(concat('subnet','2','Ref'))]"
                            }
                        }
                    }
                ]
            }
        },
		        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '3')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "tags": {
                "displayName": "[concat('NetworkInterfaces', '3')]"
            },
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig', '3')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('FWPrivateIPAddressUntrust2')]",
                            "subnet": {
                                "id": "[variables(concat('subnet','3','Ref'))]"
                            }
                        }
                    }
                ]
            }
        },
				        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '4')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "tags": {
                "displayName": "[concat('NetworkInterfaces', '4')]"
            },
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig', '4')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('FWPrivateIPAddressUntrust3')]",
                            "subnet": {
                                "id": "[variables(concat('subnet','4','Ref'))]"
                            }
                        }
                    }
                ]
            }
        },
						        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '5')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "tags": {
                "displayName": "[concat('NetworkInterfaces', '5')]"
            },
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig', '5')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('FWPrivateIPAddressUntrust4')]",
                            "subnet": {
                                "id": "[variables(concat('subnet','5','Ref'))]"
                            }
                        }
                    }
                ]
            }
        },
						        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '6')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "tags": {
                "displayName": "[concat('NetworkInterfaces', '6')]"
            },
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig', '6')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('FWPrivateIPAddressUntrust5')]",
                            "subnet": {
                                "id": "[variables(concat('subnet','6','Ref'))]"
                            }
                        }
                    }
                ]
            }
        },
						        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '7')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "tags": {
                "displayName": "[concat('NetworkInterfaces', '7')]"
            },
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig', '7')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('FWPrivateIPAddressUntrust6')]",
                            "subnet": {
                                "id": "[variables(concat('subnet','7','Ref'))]"
                            }
                        }
                    }
                ]
            }
        },
		
        {
            "name": "PAN-VM",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "storageAcountSetup1",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '0')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '1')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '2')]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '3')]",
			    "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '4')]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '5')]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '6')]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '7')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "imageSku": {
                        "value": "[variables('imageSku')]"
                    },
                    "imageOffer": {
                        "value": "[variables('imageOffer')]"
                    },
                    "imagePublisher": {
                        "value": "[variables('imagePublisher')]"
                    },
                    "nicName": {
                        "value": "[variables('nicName')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "newStorageAccount": {
                        "value": "[parameters('newStorageAccount')]"
                    },
                    "sshKey": {
                        "value": "[parameters('sshKey')]"
                    }
                }
            }
        }
    ]
}
